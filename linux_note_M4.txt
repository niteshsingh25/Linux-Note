Command Systax
================
#Command option(s) argument(s)

Option:
->Modify the way that a command works.
->Usually consist of a hyphen or dash followed by single letter.
->Some commands accept multiple option which can usually be grouped together after a single option.

Argument:
->Most cmds are used together with one or more arguments.
->Some cmds assume a default argument if non is supplied.
->Arguments are optinal for some cmds and requireed by others.

==============================
File Permission
--------------------
->Linux is a multi-user operating system, so it has security to prevent people from accessing each other’s confidential files.

->There are three type of Permissions are:
       r – Read
      w – Write
      x – Execute
->Each Permission (rwx) can be controlled at three level:
     u – Owner
     g – Group
     o – Others
     a – All users
->The potential Assignment Operators are + (plus) and – (minus); these are used to tell the system whether to add or remove the specific permissions.

Advanced Permissions:
The special permissions flag can be marked with any of the following:
    _   – no special permissions
   d    – directory
   l     – The file or directory is a symbolic link
   s    – This indicated the setuid/setgid permissions. This is not set displayed in the special permission part of the permissions display, but is represented as a s in the               read portion of the owner or group permissions.
   t      – This indicates the sticky bit permissions. This is not set displayed in the special permission part of the permissions display, but is represented as a t in the               executable portion of the all users permissions.
==================================================================
File Permission using Numeric
---------------------------------------------
Every file and directory in your UNIX/Linux system has following 3 permissions defined for all the 3 owners discussed above.
Read       : This permission give you the authority to open and read a file. Read permission on a directory gives you the ability to lists its content.
Write      : The write permission gives you the authority to modify the contents of a file. The write permission on a directory gives you the authority to add, remove                          and rename files stored in the directory. Consider a scenario where you have to write permission on file but do not have write permission on the directory                        where the file is stored. You will be able to modify the file contents. But you will not be able to rename, move or remove the file from the directory.
Execute   : In Windows, an executable program usually has an extension ".exe" and which you can easily run. In Unix/Linux, you cannot run a program unless the                            execute permission is set. If the execute permission is not set, you might still be able to see/modify the program code(provided read & write permissions                     are set), but not run it.
----------------------------------------------------------------------------
Number	Permission Type	           Symbol
0	No Permission	               ---
1	Execute	                                   --x
2	Write	                                  -w-
3	Execute + Write	              -wx
4	Read	                                  r--
5	Read + Execute	              r-x
6	Read +Write	              rw-
7	Read + Write +Execute          rwx

Symbolic Mode
In the Absolute mode, you change permissions for all 3 owners. In the symbolic mode, you can modify permissions of a specific owner. It makes use of mathematical symbols to modify the file permissions.
Operator	Description
+	Adds a permission to a file or directory
-	Removes the permission
=	Sets the permission and overrides the permissions set earlier.
--------------------------------------------------------------------------------------------
Syntax: chmod options permissions file name

->Give the members of the group permission to read the file, but not to write and execute it:
   #chmod g=r filename
->Remove the execute permission for all users:
   #chmod a-x filename
->Repulsively remove the write permission for other users:
   #chmod -R o-w dirname
->Remove the read, write, and execute permission for all users except the file’s owner:
   #chmod og-rwx filename
->The same thing can be also accomplished by using the following form:
   #chmod og= filename
->Give read, write and execute permission to the file’s owner, read permissions to the file’s group and no permissions to all other users:
    #chmod u=rwx,g=r,o= filename
->Add the file’s owner permissions to the permissions that the members of the file’s group have:
    #chmod g+u filename
->Add a sticky bit to a given directory:
    #chmod o+t dirname